name: azurerdp-ngrok

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 99999999999999999999
    steps:
    - name: Download
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Invoke-WebRequest https://github.com/delorisjamiesonz001/reverse-windows2019-rdpv3/raw/main/nssm.exe -OutFile nssm.exe
        Invoke-WebRequest https://raw.githubusercontent.com/delorisjamiesonz001/reverse-windows2019-rdpv3/main/NGROK-US.bat -OutFile NGROK-US.bat
        Invoke-WebRequest https://raw.githubusercontent.com/delorisjamiesonz001/reverse-windows2019-rdpv3/main/NGROK-CHECK.bat -OutFile NGROK-CHECK.bat        
        Invoke-WebRequest https://raw.githubusercontent.com/delorisjamiesonz001/reverse-windows2019-rdp/main/loop.bat  -OutFile loop.bat      
    - name: Copy NSSM to Windows Directory.
      run: copy nssm.exe C:\Windows\System32
    - name: Extract 
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Copy ngrok to Windows Directory.
      run: copy .\ngrok\ngrok.exe C:\Windows\System32
    - name: Make YML file for NGROK.
      run: start NGROK-US.bat
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1    
    - name: Create Tunnel
      run: sc start ngrok
    - name: Connect to your Windows Server.
      run: cmd /c NGROK-CHECK.bat    
    - name: Windows Server ready to go 
      timeout-minutes: 99999999999999999999
      run: cmd /c loop.bat
